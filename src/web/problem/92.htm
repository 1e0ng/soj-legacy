<html>
<head>
<title>ATM's</title>
</head>

<body>

<center>
<h1>POI V Stage 3 Problem 2</h1>
<h1>ATM's</h1>
</center>

<p>
Every member of Byteland Credit Society is entitled
to loan any amount of Bytelandish ducats unless it is 10<SUP>30</SUP>
or more, but he has to return the whole amount
within seven days.

There are 100 ATMs in the Client Service Room 
of the Society. They are numbered from 0 to 99.

Every ATM can perform one action only: 
it can pay or receive a fixed amount.
The i-th ATM pays 2<SUP>i</SUP> ducats if i is even
or it receives 2<SUP>i</SUP> ducats if i is odd.

If a client is going to loan a fixed sum of money it is necessary
to check if he is able to get the money using every
ATM at most once. If so, numbers of ATMs
he has to use should be determined. It is also necessary to
check if the client can return the money in a similar way,
and if so, to determine numbers of ATMs he has to
use.

</P>

<h2>Example</h2>

<p>
A client who is going to loan 7 ducats
gets 16 ducats from the ATM No 4 and 1 ducat 
from the ATM No 0 and then he returns 8 ducats in
the ATM No 3 and 2 ducats in the ATM No 1.
In order to return the amount of 7 ducats he receives 1 ducat
from the ATM No 0 and then he returns 8 ducats in ATM
No 3.
</P>

<h2>Task</h2>

<P>
Write a program that:
<UL>
<LI>reads the number of clients n from the text file BAN.IN and
then, for every client reads from the same file the amount of money 
he is going to loan;
<LI>checks for every client if he is able to get the money
using every ATM at most once and if so, determines
the numbers of ATMs he has to use; 
<LI>writes the results to the text file BAN.OUT.
</UL>
</P>

<h2>Input</h2>

<P>In the first line of the input file BAN.IN there is one
positive integer n  &lt;= 1000, which equals the number of clients.
<br>
In each of the following n lines there is one positive integer less than
10<SUP>30</SUP> (at most 30 decimal digits).
The number in the i-th line describes the amount which the client i is going 
to loan.
</P>

<h2>Output</h2>

<P>
In each of 2n lines of the output file BAN.OUT there should be
written a decreasing sequence of positive integers from the
range [0..99] separated by single spaces, or one word NIE
(which means NO in Polish):
<UL>
<LI>In the first line of the i-th pair of lines there
should be numbers of ATMs (in decreasing order) that
the client i should use to get his loan or one word NIE if 
the loan cannot be received according to the rules;

<LI>In the second line of the i-th pair there should be 
numbers of ATMs (in decreasing order) which the
client i should use to return his loan or the word NIE.

</UL>
</P>

<h2>Sample Input</h2>
<pre>
2
7
633825300114114700748351602698
</PRE>

<h2>Sample Output</h2>
<PRE>
4 3 1 0
3 0
NIE
99 3 1
</PRE>

</body>

</html>
